//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.timestageline
{ 

/// <summary>
/// 阶段线信息基类
/// </summary>
public abstract partial class TimeStageLineInfo :  behavior.Info 
{
    public TimeStageLineInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["index"].IsNumber) { throw new SerializationException(); }  Index = _json["index"]; }
        { if(!_json["parent_index"].IsNumber) { throw new SerializationException(); }  ParentIndex = _json["parent_index"]; }
        PostInit();
    }

    public TimeStageLineInfo(int index, int parent_index )  : base() 
    {
        this.Index = index;
        this.ParentIndex = parent_index;
        PostInit();
    }

    public static TimeStageLineInfo DeserializeTimeStageLineInfo(JSONNode _json)
    {
        string type = _json["$type"];
        switch (type)
        {
            case "ActionInfo": return new timestageline.ActionInfo(_json);
            case "ConditionOrInfo": return new timestageline.ConditionOrInfo(_json);
            case "ConditionAndInfo": return new timestageline.ConditionAndInfo(_json);
            default: throw new SerializationException();
        }
    }

    /// <summary>
    /// 索引
    /// </summary>
    public int Index { get; private set; }
    /// <summary>
    /// 放到哪个索引下
    /// </summary>
    public int ParentIndex { get; private set; }


    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Index:" + Index + ","
        + "ParentIndex:" + ParentIndex + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
