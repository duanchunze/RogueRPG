//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.card
{ 

public sealed partial class CardSingletonConfig :  Bright.Config.BeanBase 
{
    public CardSingletonConfig(JSONNode _json) 
    {
        { var __json0 = _json["card_pool"]; if(!__json0.IsArray) { throw new SerializationException(); } CardPool = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  CardPool.Add(__v0); }   }
        PostInit();
    }

    public CardSingletonConfig(System.Collections.Generic.List<string> card_pool ) 
    {
        this.CardPool = card_pool;
        PostInit();
    }

    public static CardSingletonConfig DeserializeCardSingletonConfig(JSONNode _json)
    {
        return new card.CardSingletonConfig(_json);
    }

    public System.Collections.Generic.List<string> CardPool { get; private set; }

    public const int __ID__ = 1423035903;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "CardPool:" + Bright.Common.StringUtil.CollectionToString(CardPool) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
