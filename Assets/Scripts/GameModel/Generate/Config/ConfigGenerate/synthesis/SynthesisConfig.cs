//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.synthesis
{ 

public sealed partial class SynthesisConfig :  Bright.Config.BeanBase 
{
    public SynthesisConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { var __json0 = _json["synthesis_members"]; if(!__json0.IsArray) { throw new SerializationException(); } SynthesisMembers = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  SynthesisMembers.Add(__v0); }   }
        { if(!_json["synthesis_achievement"].IsString) { throw new SerializationException(); }  SynthesisAchievement = _json["synthesis_achievement"]; }
        PostInit();
    }

    public SynthesisConfig(int id, System.Collections.Generic.List<string> synthesis_members, string synthesis_achievement ) 
    {
        this.Id = id;
        this.SynthesisMembers = synthesis_members;
        this.SynthesisAchievement = synthesis_achievement;
        PostInit();
    }

    public static SynthesisConfig DeserializeSynthesisConfig(JSONNode _json)
    {
        return new synthesis.SynthesisConfig(_json);
    }

    /// <summary>
    /// 这是ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 合成的成员
    /// </summary>
    public System.Collections.Generic.List<string> SynthesisMembers { get; private set; }
    /// <summary>
    /// 合成的成果
    /// </summary>
    public string SynthesisAchievement { get; private set; }

    public const int __ID__ = -905370244;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SynthesisMembers:" + Bright.Common.StringUtil.CollectionToString(SynthesisMembers) + ","
        + "SynthesisAchievement:" + SynthesisAchievement + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
