//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.procedureline
{ 

public sealed partial class AddStageDurationInfo :  procedureline.WorkerInfo 
{
    public AddStageDurationInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["stage_type"].IsNumber) { throw new SerializationException(); }  StageType = (StageType)_json["stage_type"].AsInt; }
        { if(!_json["pct"].IsNumber) { throw new SerializationException(); }  Pct = _json["pct"]; }
        { if(!_json["fix"].IsNumber) { throw new SerializationException(); }  Fix = _json["fix"]; }
        PostInit();
    }

    public AddStageDurationInfo(StageType stage_type, float pct, float fix )  : base() 
    {
        this.StageType = stage_type;
        this.Pct = pct;
        this.Fix = fix;
        PostInit();
    }

    public static AddStageDurationInfo DeserializeAddStageDurationInfo(JSONNode _json)
    {
        return new procedureline.AddStageDurationInfo(_json);
    }

    public StageType StageType { get; private set; }
    public float Pct { get; private set; }
    public float Fix { get; private set; }

    public const int __ID__ = -461904314;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "StageType:" + StageType + ","
        + "Pct:" + Pct + ","
        + "Fix:" + Fix + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
