//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.procedureline
{ 

public sealed partial class SplitBoltOnHitInfo :  procedureline.WorkerInfo 
{
    public SplitBoltOnHitInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["split_num"].IsNumber) { throw new SerializationException(); }  SplitNum = _json["split_num"]; }
        { if(!_json["bolt_alias"].IsString) { throw new SerializationException(); }  BoltAlias = _json["bolt_alias"]; }
        { if(!_json["speed"].IsNumber) { throw new SerializationException(); }  Speed = _json["speed"]; }
        { if(!_json["radius"].IsNumber) { throw new SerializationException(); }  Radius = _json["radius"]; }
        PostInit();
    }

    public SplitBoltOnHitInfo(int split_num, string bolt_alias, float speed, float radius )  : base() 
    {
        this.SplitNum = split_num;
        this.BoltAlias = bolt_alias;
        this.Speed = speed;
        this.Radius = radius;
        PostInit();
    }

    public static SplitBoltOnHitInfo DeserializeSplitBoltOnHitInfo(JSONNode _json)
    {
        return new procedureline.SplitBoltOnHitInfo(_json);
    }

    /// <summary>
    /// 分裂出几个投射物
    /// </summary>
    public int SplitNum { get; private set; }
    /// <summary>
    /// 投射物名
    /// </summary>
    public string BoltAlias { get; private set; }
    /// <summary>
    /// 弹道速度
    /// </summary>
    public float Speed { get; private set; }
    /// <summary>
    /// 分裂范围
    /// </summary>
    public float Radius { get; private set; }

    public const int __ID__ = -1549965286;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "SplitNum:" + SplitNum + ","
        + "BoltAlias:" + BoltAlias + ","
        + "Speed:" + Speed + ","
        + "Radius:" + Radius + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
