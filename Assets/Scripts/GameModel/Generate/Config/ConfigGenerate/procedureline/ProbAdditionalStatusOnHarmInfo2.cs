//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.procedureline
{ 

/// <summary>
/// 添加一个自定义的状态
/// </summary>
public sealed partial class ProbAdditionalStatusOnHarmInfo2 :  procedureline.WorkerInfo 
{
    public ProbAdditionalStatusOnHarmInfo2(JSONNode _json)  : base(_json) 
    {
        { if(!_json["status_alias"].IsString) { throw new SerializationException(); }  StatusAlias = _json["status_alias"]; }
        { if(!_json["probabilistic"].IsNumber) { throw new SerializationException(); }  Probabilistic = _json["probabilistic"]; }
        { if(!_json["duration"].IsNumber) { throw new SerializationException(); }  Duration = _json["duration"]; }
        { if(!_json["action"].IsObject) { throw new SerializationException(); }  Action = timeline.TimeActionInfo.DeserializeTimeActionInfo(_json["action"]);  }
        PostInit();
    }

    public ProbAdditionalStatusOnHarmInfo2(string status_alias, float probabilistic, float duration, timeline.TimeActionInfo action )  : base() 
    {
        this.StatusAlias = status_alias;
        this.Probabilistic = probabilistic;
        this.Duration = duration;
        this.Action = action;
        PostInit();
    }

    public static ProbAdditionalStatusOnHarmInfo2 DeserializeProbAdditionalStatusOnHarmInfo2(JSONNode _json)
    {
        return new procedureline.ProbAdditionalStatusOnHarmInfo2(_json);
    }

    public string StatusAlias { get; private set; }
    public float Probabilistic { get; private set; }
    public float Duration { get; private set; }
    public timeline.TimeActionInfo Action { get; private set; }

    public const int __ID__ = 603241340;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        Action?.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        Action?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "StatusAlias:" + StatusAlias + ","
        + "Probabilistic:" + Probabilistic + ","
        + "Duration:" + Duration + ","
        + "Action:" + Action + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
