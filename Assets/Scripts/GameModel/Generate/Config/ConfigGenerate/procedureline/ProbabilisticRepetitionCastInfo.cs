//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.procedureline
{ 

public sealed partial class ProbabilisticRepetitionCastInfo :  procedureline.WorkerInfo 
{
    public ProbabilisticRepetitionCastInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["probability"].IsNumber) { throw new SerializationException(); }  Probability = _json["probability"]; }
        PostInit();
    }

    public ProbabilisticRepetitionCastInfo(float probability )  : base() 
    {
        this.Probability = probability;
        PostInit();
    }

    public static ProbabilisticRepetitionCastInfo DeserializeProbabilisticRepetitionCastInfo(JSONNode _json)
    {
        return new procedureline.ProbabilisticRepetitionCastInfo(_json);
    }

    /// <summary>
    /// 0 - 1
    /// </summary>
    public float Probability { get; private set; }

    public const int __ID__ = 452448162;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Probability:" + Probability + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
