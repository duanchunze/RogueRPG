//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.drops
{ 

public sealed partial class DropNumberInfo :  drops.Info 
{
    public DropNumberInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["min"].IsNumber) { throw new SerializationException(); }  Min = _json["min"]; }
        { if(!_json["max"].IsNumber) { throw new SerializationException(); }  Max = _json["max"]; }
        { var __json0 = _json["weights"]; if(!__json0.IsArray) { throw new SerializationException(); } Weights = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Weights.Add(__v0); }   }
        PostInit();
    }

    public DropNumberInfo(int min, int max, System.Collections.Generic.List<int> weights )  : base() 
    {
        this.Min = min;
        this.Max = max;
        this.Weights = weights;
        PostInit();
    }

    public static DropNumberInfo DeserializeDropNumberInfo(JSONNode _json)
    {
        return new drops.DropNumberInfo(_json);
    }

    /// <summary>
    /// 掉落数量区间min
    /// </summary>
    public int Min { get; private set; }
    /// <summary>
    /// 掉落数量区间max
    /// </summary>
    public int Max { get; private set; }
    /// <summary>
    /// 个数权重
    /// </summary>
    public System.Collections.Generic.List<int> Weights { get; private set; }

    public const int __ID__ = 526472144;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Min:" + Min + ","
        + "Max:" + Max + ","
        + "Weights:" + Bright.Common.StringUtil.CollectionToString(Weights) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
