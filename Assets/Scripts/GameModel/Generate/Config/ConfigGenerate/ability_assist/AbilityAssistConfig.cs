//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.ability_assist
{ 

public sealed partial class AbilityAssistConfig :  Bright.Config.BeanBase 
{
    public AbilityAssistConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["alias"].IsString) { throw new SerializationException(); }  Alias = _json["alias"]; }
        { if(!_json["view_name"].IsString) { throw new SerializationException(); }  ViewName = _json["view_name"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  Desc = _json["desc"]; }
        { var __json0 = _json["tags"]; if(!__json0.IsArray) { throw new SerializationException(); } Tags = new System.Collections.Generic.List<TagType>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { TagType __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = (TagType)__e0.AsInt; }  Tags.Add(__v0); }   }
        { var __json0 = _json["numeric_nodes"]; if(!__json0.IsArray) { throw new SerializationException(); } NumericNodes = new System.Collections.Generic.List<numeric.AttachValueInfo>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { numeric.AttachValueInfo __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = numeric.AttachValueInfo.DeserializeAttachValueInfo(__e0);  }  NumericNodes.Add(__v0); }   }
        PostInit();
    }

    public AbilityAssistConfig(int id, string alias, string view_name, string desc, System.Collections.Generic.List<TagType> tags, System.Collections.Generic.List<numeric.AttachValueInfo> numeric_nodes ) 
    {
        this.Id = id;
        this.Alias = alias;
        this.ViewName = view_name;
        this.Desc = desc;
        this.Tags = tags;
        this.NumericNodes = numeric_nodes;
        PostInit();
    }

    public static AbilityAssistConfig DeserializeAbilityAssistConfig(JSONNode _json)
    {
        return new ability_assist.AbilityAssistConfig(_json);
    }

    /// <summary>
    /// 这是ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 别名
    /// </summary>
    public string Alias { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string ViewName { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 标签
    /// </summary>
    public System.Collections.Generic.List<TagType> Tags { get; private set; }
    /// <summary>
    /// 附加的数值
    /// </summary>
    public System.Collections.Generic.List<numeric.AttachValueInfo> NumericNodes { get; private set; }

    public const int __ID__ = -1160482203;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in NumericNodes) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in NumericNodes) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Alias:" + Alias + ","
        + "ViewName:" + ViewName + ","
        + "Desc:" + Desc + ","
        + "Tags:" + Bright.Common.StringUtil.CollectionToString(Tags) + ","
        + "NumericNodes:" + Bright.Common.StringUtil.CollectionToString(NumericNodes) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
