//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.timeline
{ 

/// <summary>
/// 一个伤害行为
/// </summary>
public abstract partial class TpHarmInfo :  timeline.TimePointInfo 
{
    public TpHarmInfo(JSONNode _json)  : base(_json) 
    {
        PostInit();
    }

    public TpHarmInfo(int model, float point )  : base(model,point) 
    {
        PostInit();
    }

    public static TpHarmInfo DeserializeTpHarmInfo(JSONNode _json)
    {
        string type = _json["$type"];
        switch (type)
        {
            case "HarmOfTargetedInfo": return new timeline.HarmOfTargetedInfo(_json);
            case "HarmOfTargetedBoltInfo": return new timeline.HarmOfTargetedBoltInfo(_json);
            case "HarmOfDirectionBoltInfo": return new timeline.HarmOfDirectionBoltInfo(_json);
            case "HarmOfPointBoltInfo": return new timeline.HarmOfPointBoltInfo(_json);
            case "HarmOfLiuxingluoBoltInfo": return new timeline.HarmOfLiuxingluoBoltInfo(_json);
            case "HarmOfDibozhanBoltInfo": return new timeline.HarmOfDibozhanBoltInfo(_json);
            default: throw new SerializationException();
        }
    }



    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Model:" + Model + ","
        + "Point:" + Point + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
