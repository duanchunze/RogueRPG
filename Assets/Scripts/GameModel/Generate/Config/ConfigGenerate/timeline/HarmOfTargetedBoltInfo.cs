//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.timeline
{ 

/// <summary>
/// ez平a
/// </summary>
public sealed partial class HarmOfTargetedBoltInfo :  timeline.TpHarmInfo 
{
    public HarmOfTargetedBoltInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["harm_formula"].IsObject) { throw new SerializationException(); }  HarmFormula = numeric.DamageFormulaInfo.DeserializeDamageFormulaInfo(_json["harm_formula"]);  }
        { if(!_json["bolt_config_alias"].IsString) { throw new SerializationException(); }  BoltConfigAlias = _json["bolt_config_alias"]; }
        { if(!_json["speed"].IsNumber) { throw new SerializationException(); }  Speed = _json["speed"]; }
        PostInit();
    }

    public HarmOfTargetedBoltInfo(int model, float point, numeric.DamageFormulaInfo harm_formula, string bolt_config_alias, float speed )  : base(model,point) 
    {
        this.HarmFormula = harm_formula;
        this.BoltConfigAlias = bolt_config_alias;
        this.Speed = speed;
        PostInit();
    }

    public static HarmOfTargetedBoltInfo DeserializeHarmOfTargetedBoltInfo(JSONNode _json)
    {
        return new timeline.HarmOfTargetedBoltInfo(_json);
    }

    public numeric.DamageFormulaInfo HarmFormula { get; private set; }
    /// <summary>
    /// 投射物名
    /// </summary>
    public string BoltConfigAlias { get; private set; }
    /// <summary>
    /// 弹道速度
    /// </summary>
    public float Speed { get; private set; }

    public const int __ID__ = -689756309;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        HarmFormula?.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        HarmFormula?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Model:" + Model + ","
        + "Point:" + Point + ","
        + "HarmFormula:" + HarmFormula + ","
        + "BoltConfigAlias:" + BoltConfigAlias + ","
        + "Speed:" + Speed + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
