//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.timeline
{ 

public sealed partial class SetDataInfo :  timeline.TimePointInfo 
{
    public SetDataInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["key"].IsNumber) { throw new SerializationException(); }  Key = (BlackboardKey)_json["key"].AsInt; }
        { if(!_json["value"].IsString) { throw new SerializationException(); }  Value = _json["value"]; }
        PostInit();
    }

    public SetDataInfo(int model, float point, BlackboardKey key, string value )  : base(model,point) 
    {
        this.Key = key;
        this.Value = value;
        PostInit();
    }

    public static SetDataInfo DeserializeSetDataInfo(JSONNode _json)
    {
        return new timeline.SetDataInfo(_json);
    }

    public BlackboardKey Key { get; private set; }
    public string Value { get; private set; }

    public const int __ID__ = -1486529619;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Model:" + Model + ","
        + "Point:" + Point + ","
        + "Key:" + Key + ","
        + "Value:" + Value + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
