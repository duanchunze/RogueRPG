//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.timeline
{ 

/// <summary>
/// 盖伦E
/// </summary>
public sealed partial class ContinuousHarmOfColliderInfo :  timeline.TsHarmInfo 
{
    public ContinuousHarmOfColliderInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["harm_formula"].IsObject) { throw new SerializationException(); }  HarmFormula = numeric.DamageFormulaInfo.DeserializeDamageFormulaInfo(_json["harm_formula"]);  }
        { if(!_json["collider_name"].IsString) { throw new SerializationException(); }  ColliderName = _json["collider_name"]; }
        { if(!_json["center"].IsObject) { throw new SerializationException(); }  Center = hmath.Vector3.DeserializeVector3(_json["center"]);  }
        { if(!_json["size"].IsObject) { throw new SerializationException(); }  Size = hmath.Vector3.DeserializeVector3(_json["size"]);  }
        { if(!_json["internal_time"].IsNumber) { throw new SerializationException(); }  InternalTime = _json["internal_time"]; }
        PostInit();
    }

    public ContinuousHarmOfColliderInfo(int model, float origin, float dest, numeric.DamageFormulaInfo harm_formula, string collider_name, hmath.Vector3 center, hmath.Vector3 size, float internal_time )  : base(model,origin,dest) 
    {
        this.HarmFormula = harm_formula;
        this.ColliderName = collider_name;
        this.Center = center;
        this.Size = size;
        this.InternalTime = internal_time;
        PostInit();
    }

    public static ContinuousHarmOfColliderInfo DeserializeContinuousHarmOfColliderInfo(JSONNode _json)
    {
        return new timeline.ContinuousHarmOfColliderInfo(_json);
    }

    public numeric.DamageFormulaInfo HarmFormula { get; private set; }
    public string ColliderName { get; private set; }
    public hmath.Vector3 Center { get; private set; }
    public hmath.Vector3 Size { get; private set; }
    public float InternalTime { get; private set; }

    public const int __ID__ = -1877316503;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        HarmFormula?.Resolve(_tables);
        Center?.Resolve(_tables);
        Size?.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        HarmFormula?.TranslateText(translator);
        Center?.TranslateText(translator);
        Size?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Model:" + Model + ","
        + "Origin:" + Origin + ","
        + "Dest:" + Dest + ","
        + "HarmFormula:" + HarmFormula + ","
        + "ColliderName:" + ColliderName + ","
        + "Center:" + Center + ","
        + "Size:" + Size + ","
        + "InternalTime:" + InternalTime + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
