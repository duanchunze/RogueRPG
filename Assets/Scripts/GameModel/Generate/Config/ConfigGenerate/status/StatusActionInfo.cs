//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.status
{ 

public sealed partial class StatusActionInfo :  Bright.Config.BeanBase 
{
    public StatusActionInfo(JSONNode _json) 
    {
        { var __json0 = _json["actions"]; if(!__json0.IsArray) { throw new SerializationException(); } Actions = new System.Collections.Generic.List<timeline.TimeActionInfo>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { timeline.TimeActionInfo __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = timeline.TimeActionInfo.DeserializeTimeActionInfo(__e0);  }  Actions.Add(__v0); }   }
        PostInit();
    }

    public StatusActionInfo(System.Collections.Generic.List<timeline.TimeActionInfo> actions ) 
    {
        this.Actions = actions;
        PostInit();
    }

    public static StatusActionInfo DeserializeStatusActionInfo(JSONNode _json)
    {
        return new status.StatusActionInfo(_json);
    }

    public System.Collections.Generic.List<timeline.TimeActionInfo> Actions { get; private set; }

    public const int __ID__ = -1655559118;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in Actions) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in Actions) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Actions:" + Bright.Common.StringUtil.CollectionToString(Actions) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
