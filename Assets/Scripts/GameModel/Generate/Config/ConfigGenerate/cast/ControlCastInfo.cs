//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.cast
{ 

/// <summary>
/// 控制器来触发施法, 也就是常说的按键施法(主动型施法)
/// </summary>
public sealed partial class ControlCastInfo :  cast.Info 
{
    public ControlCastInfo(JSONNode _json)  : base(_json) 
    {
        { if(!_json["code"].IsNumber) { throw new SerializationException(); }  Code = (ControlCode)_json["code"].AsInt; }
        { if(!_json["support_continue"].IsBoolean) { throw new SerializationException(); }  SupportContinue = _json["support_continue"]; }
        PostInit();
    }

    public ControlCastInfo(ControlCode code, bool support_continue )  : base() 
    {
        this.Code = code;
        this.SupportContinue = support_continue;
        PostInit();
    }

    public static ControlCastInfo DeserializeControlCastInfo(JSONNode _json)
    {
        return new cast.ControlCastInfo(_json);
    }

    /// <summary>
    /// 控制码
    /// </summary>
    public ControlCode Code { get; private set; }
    /// <summary>
    /// 是否支持连点, 连点就是支持按键持续按下
    /// </summary>
    public bool SupportContinue { get; private set; }

    public const int __ID__ = 482044987;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Code:" + Code + ","
        + "SupportContinue:" + SupportContinue + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
