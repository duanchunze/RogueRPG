//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.faction
{ 

public sealed partial class FactionConfig :  Bright.Config.BeanBase 
{
    public FactionConfig(JSONNode _json) 
    {
        { if(!_json["faction_tag"].IsNumber) { throw new SerializationException(); }  FactionTag = (TagType)_json["faction_tag"].AsInt; }
        { var __json0 = _json["faction_relations"]; if(!__json0.IsArray) { throw new SerializationException(); } FactionRelations = new System.Collections.Generic.Dictionary<FactionModel, System.Collections.Generic.Dictionary<FactionType, System.Collections.Generic.List<TagType>>>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { FactionModel _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = (FactionModel)__e0[0].AsInt; } System.Collections.Generic.Dictionary<FactionType, System.Collections.Generic.List<TagType>> _v0;  { var __json1 = __e0[1]; if(!__json1.IsArray) { throw new SerializationException(); } _v0 = new System.Collections.Generic.Dictionary<FactionType, System.Collections.Generic.List<TagType>>(__json1.Count); foreach(JSONNode __e1 in __json1.Children) { FactionType _k1;  { if(!__e1[0].IsNumber) { throw new SerializationException(); }  _k1 = (FactionType)__e1[0].AsInt; } System.Collections.Generic.List<TagType> _v1;  { var __json2 = __e1[1]; if(!__json2.IsArray) { throw new SerializationException(); } _v1 = new System.Collections.Generic.List<TagType>(__json2.Count); foreach(JSONNode __e2 in __json2.Children) { TagType __v2;  { if(!__e2.IsNumber) { throw new SerializationException(); }  __v2 = (TagType)__e2.AsInt; }  _v1.Add(__v2); }   }  _v0.Add(_k1, _v1); }   }  FactionRelations.Add(_k0, _v0); }   }
        PostInit();
    }

    public FactionConfig(TagType faction_tag, System.Collections.Generic.Dictionary<FactionModel, System.Collections.Generic.Dictionary<FactionType, System.Collections.Generic.List<TagType>>> faction_relations ) 
    {
        this.FactionTag = faction_tag;
        this.FactionRelations = faction_relations;
        PostInit();
    }

    public static FactionConfig DeserializeFactionConfig(JSONNode _json)
    {
        return new faction.FactionConfig(_json);
    }

    public TagType FactionTag { get; private set; }
    /// <summary>
    /// 不同阵营模式下, 对敌对、友方的解释也不同
    /// </summary>
    public System.Collections.Generic.Dictionary<FactionModel, System.Collections.Generic.Dictionary<FactionType, System.Collections.Generic.List<TagType>>> FactionRelations { get; private set; }

    public const int __ID__ = -261019636;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "FactionTag:" + FactionTag + ","
        + "FactionRelations:" + Bright.Common.StringUtil.CollectionToString(FactionRelations) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
