//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.actor
{ 

public sealed partial class ActorConfig :  Bright.Config.BeanBase 
{
    public ActorConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["alias"].IsString) { throw new SerializationException(); }  Alias = _json["alias"]; }
        { if(!_json["view_name"].IsString) { throw new SerializationException(); }  ViewName = _json["view_name"]; }
        { var __json0 = _json["labels"]; if(!__json0.IsArray) { throw new SerializationException(); } Labels = new System.Collections.Generic.List<TagType>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { TagType __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = (TagType)__e0.AsInt; }  Labels.Add(__v0); }   }
        { if(!_json["model_name"].IsString) { throw new SerializationException(); }  ModelName = _json["model_name"]; }
        { if(!_json["numeric_alias"].IsString) { throw new SerializationException(); }  NumericAlias = _json["numeric_alias"]; }
        { if(!_json["ai_alias"].IsString) { throw new SerializationException(); }  AiAlias = _json["ai_alias"]; }
        { var __json0 = _json["org_abilitys"]; if(!__json0.IsArray) { throw new SerializationException(); } OrgAbilitys = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  OrgAbilitys.Add(__v0); }   }
        { var __json0 = _json["org_cards"]; if(!__json0.IsArray) { throw new SerializationException(); } OrgCards = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  OrgCards.Add(__v0); }   }
        { var __json0 = _json["possible_drops_by_probability"]; if(!__json0.IsArray) { throw new SerializationException(); } PossibleDropsByProbability = new System.Collections.Generic.List<drops.DropByProbability>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { drops.DropByProbability __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = drops.DropByProbability.DeserializeDropByProbability(__e0);  }  PossibleDropsByProbability.Add(__v0); }   }
        { var __json0 = _json["possible_drops_by_weight"]; if(!__json0.IsArray) { throw new SerializationException(); } PossibleDropsByWeight = new System.Collections.Generic.List<drops.DropByWeightInfo>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { drops.DropByWeightInfo __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = drops.DropByWeightInfo.DeserializeDropByWeightInfo(__e0);  }  PossibleDropsByWeight.Add(__v0); }   }
        { if(!_json["possible_drop_number"].IsObject) { throw new SerializationException(); }  PossibleDropNumber = drops.DropNumberInfo.DeserializeDropNumberInfo(_json["possible_drop_number"]);  }
        PostInit();
    }

    public ActorConfig(int id, string alias, string view_name, System.Collections.Generic.List<TagType> labels, string model_name, string numeric_alias, string ai_alias, System.Collections.Generic.List<string> org_abilitys, System.Collections.Generic.List<string> org_cards, System.Collections.Generic.List<drops.DropByProbability> possible_drops_by_probability, System.Collections.Generic.List<drops.DropByWeightInfo> possible_drops_by_weight, drops.DropNumberInfo possible_drop_number ) 
    {
        this.Id = id;
        this.Alias = alias;
        this.ViewName = view_name;
        this.Labels = labels;
        this.ModelName = model_name;
        this.NumericAlias = numeric_alias;
        this.AiAlias = ai_alias;
        this.OrgAbilitys = org_abilitys;
        this.OrgCards = org_cards;
        this.PossibleDropsByProbability = possible_drops_by_probability;
        this.PossibleDropsByWeight = possible_drops_by_weight;
        this.PossibleDropNumber = possible_drop_number;
        PostInit();
    }

    public static ActorConfig DeserializeActorConfig(JSONNode _json)
    {
        return new actor.ActorConfig(_json);
    }

    /// <summary>
    /// 这是ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 别名
    /// </summary>
    public string Alias { get; private set; }
    /// <summary>
    /// 角色名
    /// </summary>
    public string ViewName { get; private set; }
    /// <summary>
    /// 角色标签
    /// </summary>
    public System.Collections.Generic.List<TagType> Labels { get; private set; }
    /// <summary>
    /// 模型名
    /// </summary>
    public string ModelName { get; private set; }
    /// <summary>
    /// 初始数值
    /// </summary>
    public string NumericAlias { get; private set; }
    /// <summary>
    /// 初始行为
    /// </summary>
    public string AiAlias { get; private set; }
    /// <summary>
    /// 初始技能
    /// </summary>
    public System.Collections.Generic.List<string> OrgAbilitys { get; private set; }
    /// <summary>
    /// 初始卡牌
    /// </summary>
    public System.Collections.Generic.List<string> OrgCards { get; private set; }
    public System.Collections.Generic.List<drops.DropByProbability> PossibleDropsByProbability { get; private set; }
    public System.Collections.Generic.List<drops.DropByWeightInfo> PossibleDropsByWeight { get; private set; }
    public drops.DropNumberInfo PossibleDropNumber { get; private set; }

    public const int __ID__ = -1847013634;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in PossibleDropsByProbability) { _e?.Resolve(_tables); }
        foreach(var _e in PossibleDropsByWeight) { _e?.Resolve(_tables); }
        PossibleDropNumber?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in PossibleDropsByProbability) { _e?.TranslateText(translator); }
        foreach(var _e in PossibleDropsByWeight) { _e?.TranslateText(translator); }
        PossibleDropNumber?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Alias:" + Alias + ","
        + "ViewName:" + ViewName + ","
        + "Labels:" + Bright.Common.StringUtil.CollectionToString(Labels) + ","
        + "ModelName:" + ModelName + ","
        + "NumericAlias:" + NumericAlias + ","
        + "AiAlias:" + AiAlias + ","
        + "OrgAbilitys:" + Bright.Common.StringUtil.CollectionToString(OrgAbilitys) + ","
        + "OrgCards:" + Bright.Common.StringUtil.CollectionToString(OrgCards) + ","
        + "PossibleDropsByProbability:" + Bright.Common.StringUtil.CollectionToString(PossibleDropsByProbability) + ","
        + "PossibleDropsByWeight:" + Bright.Common.StringUtil.CollectionToString(PossibleDropsByWeight) + ","
        + "PossibleDropNumber:" + PossibleDropNumber + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
