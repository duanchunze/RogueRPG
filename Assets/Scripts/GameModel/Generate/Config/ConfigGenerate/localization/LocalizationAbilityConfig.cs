//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.localization
{ 

public sealed partial class LocalizationAbilityConfig :  Bright.Config.BeanBase 
{
    public LocalizationAbilityConfig(JSONNode _json) 
    {
        { if(!_json["alias"].IsString) { throw new SerializationException(); }  Alias = _json["alias"]; }
        { var __json0 = _json["name"]; if(!__json0.IsArray) { throw new SerializationException(); } Name = new System.Collections.Generic.Dictionary<string, string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string _k0;  { if(!__e0[0].IsString) { throw new SerializationException(); }  _k0 = __e0[0]; } string _v0;  { if(!__e0[1].IsString) { throw new SerializationException(); }  _v0 = __e0[1]; }  Name.Add(_k0, _v0); }   }
        { var __json0 = _json["desc"]; if(!__json0.IsArray) { throw new SerializationException(); } Desc = new System.Collections.Generic.Dictionary<string, string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string _k0;  { if(!__e0[0].IsString) { throw new SerializationException(); }  _k0 = __e0[0]; } string _v0;  { if(!__e0[1].IsString) { throw new SerializationException(); }  _v0 = __e0[1]; }  Desc.Add(_k0, _v0); }   }
        PostInit();
    }

    public LocalizationAbilityConfig(string alias, System.Collections.Generic.Dictionary<string, string> name, System.Collections.Generic.Dictionary<string, string> desc ) 
    {
        this.Alias = alias;
        this.Name = name;
        this.Desc = desc;
        PostInit();
    }

    public static LocalizationAbilityConfig DeserializeLocalizationAbilityConfig(JSONNode _json)
    {
        return new localization.LocalizationAbilityConfig(_json);
    }

    public string Alias { get; private set; }
    public System.Collections.Generic.Dictionary<string, string> Name { get; private set; }
    public System.Collections.Generic.Dictionary<string, string> Desc { get; private set; }

    public const int __ID__ = 1810456510;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Alias:" + Alias + ","
        + "Name:" + Bright.Common.StringUtil.CollectionToString(Name) + ","
        + "Desc:" + Bright.Common.StringUtil.CollectionToString(Desc) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
