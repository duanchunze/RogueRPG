//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Hsenl.localization
{ 

public sealed partial class TbLocalizationAbilityPatchConfig
{
    private readonly List<localization.LocalizationAbilityPatchConfig> _dataList;
    
    private Dictionary<int, localization.LocalizationAbilityPatchConfig> _dataMap_id;
    private Dictionary<string, localization.LocalizationAbilityPatchConfig> _dataMap_alias;

    public TbLocalizationAbilityPatchConfig(JSONNode _json)
    {
        _dataList = new List<localization.LocalizationAbilityPatchConfig>();
        
        foreach(JSONNode _row in _json.Children)
        {
            var _v = localization.LocalizationAbilityPatchConfig.DeserializeLocalizationAbilityPatchConfig(_row);
            _dataList.Add(_v);
        }
        _dataMap_id = new Dictionary<int, localization.LocalizationAbilityPatchConfig>();
        _dataMap_alias = new Dictionary<string, localization.LocalizationAbilityPatchConfig>();
    foreach(var _v in _dataList)
    {
        _dataMap_id.Add(_v.Id, _v);
        _dataMap_alias.Add(_v.Alias, _v);
    }
        PostInit();
    }

    public List<localization.LocalizationAbilityPatchConfig> DataList => _dataList;

    public localization.LocalizationAbilityPatchConfig GetById(int key) => _dataMap_id.TryGetValue(key, out localization.LocalizationAbilityPatchConfig __v) ? __v : null;
    public localization.LocalizationAbilityPatchConfig GetByAlias(string key) => _dataMap_alias.TryGetValue(key, out localization.LocalizationAbilityPatchConfig __v) ? __v : null;

    public void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var v in _dataList)
        {
            v.Resolve(_tables);
        }
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var v in _dataList)
        {
            v.TranslateText(translator);
        }
    }

    
    partial void PostInit();
    partial void PostResolve();
}

}